/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
/**
 *
 * @author Ismaili
 */
public class Profile extends javax.swing.JFrame {
    

    /**
     * Creates new form Profile
     */
    public Profile() {
        initComponents();
        DoConnect();
    }
    public void DoConnect( ) {
        String admission_no=LogIN.admno.getText();
        admno.setText(LogIN.admno.getText());
           try {
    String host = "jdbc:mysql://localhost:3306/javaprojects?zeroDateTimeBehavior=convertToNull";
    String uName ="admins";
    String uPass ="276438951";
    Connection con = DriverManager.getConnection(host,uName,uPass);
    
    Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
    String SQL = "SELECT*FROM studentsinfo where ADMISSION_NUMBER='"+admission_no+"'";
    ResultSet rs = stmt.executeQuery(SQL);
    
   rs.next();
    String adm_no=rs.getString("ADMISSION_NUMBER");
    String first_name = rs.getString("FIRST_NAME");
    String last_name = rs.getString("LAST_NAME");
    String course = rs.getString("COURSE");
    String department = rs.getString("DEPARTMENT");
    int yearofintake = rs.getInt("YEAROFINTAKE");
    String homciity = rs.getString("HOME_CITY");
    String geender= rs.getString("GENDER_ID");
    
    DateFormat dateFormat = new SimpleDateFormat("yyyy");
    Date date = new Date();
    String curryear =  dateFormat.format(date);
    int curryear1 = Integer.parseInt(curryear);
    String curyear =Integer.toString(curryear1-yearofintake);
    
    String fullname=first_name+" "+last_name;
    
	   
    
    
    name.setText(fullname);
    coursedepartment.setText(course);
    yearcurr.setText(curyear);
    homcity.setText(homciity);
    gender.setText(geender);
    depart.setText(department);
    
    }
        catch (SQLException err){
            JOptionPane.showMessageDialog(this, err.getMessage());
        }

}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        admno = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        coursedepartment = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        yearcurr = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        homcity = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        gender = new javax.swing.JTextField();
        depart = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(0, 0));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setMaximumSize(new java.awt.Dimension(0, 0));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel2.setText("Admission Number");
        jLabel2.setMaximumSize(new java.awt.Dimension(0, 0));

        admno.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        admno.setText("jTextField1");
        admno.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        admno.setMaximumSize(new java.awt.Dimension(0, 0));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel3.setText("Full Name");
        jLabel3.setMaximumSize(new java.awt.Dimension(0, 0));

        name.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        name.setText("jTextField2");
        name.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        name.setMaximumSize(new java.awt.Dimension(0, 0));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel4.setText("Course & Department");
        jLabel4.setMaximumSize(new java.awt.Dimension(0, 0));

        coursedepartment.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        coursedepartment.setText("jTextField3");
        coursedepartment.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        coursedepartment.setMaximumSize(new java.awt.Dimension(0, 0));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel5.setText("Current Year of Study");
        jLabel5.setMaximumSize(new java.awt.Dimension(0, 0));

        yearcurr.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        yearcurr.setText("jTextField4");
        yearcurr.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        yearcurr.setMaximumSize(new java.awt.Dimension(0, 0));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel6.setText("Home City");
        jLabel6.setMaximumSize(new java.awt.Dimension(0, 0));

        homcity.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        homcity.setText("jTextField5");
        homcity.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        homcity.setMaximumSize(new java.awt.Dimension(0, 0));

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton1.setText("Report Errors");
        jButton1.setEnabled(false);
        jButton1.setMaximumSize(new java.awt.Dimension(0, 0));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton2.setText("Continue");
        jButton2.setMaximumSize(new java.awt.Dimension(0, 0));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel7.setText("Gender");
        jLabel7.setMaximumSize(new java.awt.Dimension(0, 0));

        gender.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        gender.setText("jTextField1");
        gender.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        gender.setMaximumSize(new java.awt.Dimension(0, 0));

        depart.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        depart.setText("jTextField1");
        depart.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        depart.setMaximumSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(admno, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                    .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(yearcurr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(homcity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(coursedepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(depart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(admno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coursedepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(depart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearcurr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(homcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        admno.setEditable(false);
        name.setEditable(false);
        coursedepartment.setEditable(false);
        yearcurr.setEditable(false);
        homcity.setEditable(false);
        jButton1.setEnabled(true);
        depart.setEditable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel1.setText("Room Allocation");
        jLabel1.setMaximumSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String adm_no4 = admno.getText();
        String sexgen=gender.getText();
        String kozi=coursedepartment.getText();
        //String homciity1=homcity.getText();
        int yearcurr11=Integer.parseInt(yearcurr.getText());
       
 
    //GIRLS        
        
        //BLOCK II FIRST AND SECOND YEAR OD
        if (yearcurr11==1&&kozi.equals("OD")&&sexgen.equals("F")||yearcurr11==2&&kozi.equals("OD")&&sexgen.equals("F")){
           
            try {
            
    String host = "jdbc:mysql://localhost:3306/javaprojects?zeroDateTimeBehavior=convertToNull";
    String uName ="admins";
    String uPass ="276438951";
    Connection con = DriverManager.getConnection(host,uName,uPass);
    
    
    Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
    String SQL = "SELECT*FROM block2 where OCCUPANT_1='"+adm_no4+"' or OCCUPANT_2='"+adm_no4+"'or OCCUPANT_3='"+adm_no4+"'or OCCUPANT_4='"+adm_no4+"'or OCCUPANT_5='"+adm_no4+"'or OCCUPANT_6='"+adm_no4+"'or OCCUPANT_7='"+adm_no4+"'or OCCUPANT_8='"+adm_no4+"'or OCCUPANT_9='"+adm_no4+"'or OCCUPANT_10='"+adm_no4+"'";
    
    ResultSet rs = stmt.executeQuery(SQL);
    
    //rs.moveToCurrentRow();
    //rs.updateString("OCCUPANT_1","150232432409");
    //rs.updateRow();
    //stmt.close( );
    //rs.close( );
    if (rs.next()){
        new RoomAllocated ().setVisible(true);
        dispose();
        
    }
    else{
    rs.close( );
    
    
    String SQL1 = "SELECT*FROM block2 ";
    ResultSet rs1 = stmt.executeQuery(SQL1);
    
    
    int roomnum =12;
    rs1.next();
    while (roomnum>=0){
        rs1.moveToCurrentRow();
        String occu1=rs1.getString("OCCUPANT_1");
        String occu2=rs1.getString("OCCUPANT_2");
        String occu3=rs1.getString("OCCUPANT_3");
        String occu4=rs1.getString("OCCUPANT_4");
        String occu5=rs1.getString("OCCUPANT_5");
        String occu6=rs1.getString("OCCUPANT_6");
        String occu7=rs1.getString("OCCUPANT_7");
        String occu8=rs1.getString("OCCUPANT_8");
        String occu9=rs1.getString("OCCUPANT_9");
        String occu10=rs1.getString("OCCUPANT_10");
        
        if(occu1.equals("1")){
        
            
            rs1.updateString("OCCUPANT_1", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
            
        }else if(occu2.equals("1")){
            rs1.updateString("OCCUPANT_2", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu3.equals("1")){
            rs1.updateString("OCCUPANT_3", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu4.equals("1")){
            rs1.updateString("OCCUPANT_4", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu5.equals("1")){
            rs1.updateString("OCCUPANT_5", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu6.equals("1")){
            rs1.updateString("OCCUPANT_6", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu7.equals("1")){
            rs1.updateString("OCCUPANT_7", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu8.equals("1")){
            rs1.updateString("OCCUPANT_8", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu9.equals("1")){
            rs1.updateString("OCCUPANT_9", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu10.equals("1")){
            rs1.updateString("OCCUPANT_10", adm_no4);
            break;
            
        }else if(occu9.equals("2")||occu10.equals("2")){
            rs1.next();
            
        }  else {
            rs1.next();
        }
        roomnum--;
    } }
    
       }
       catch (SQLException err){
        System.out.println(err.getMessage());
    }
            
            
        new RoomAllocated ().setVisible(true);
        dispose();}
        
        
        
      //BLOCK V THIRD YEAR OD  
        if (yearcurr11==3&&kozi.equals("OD")&&sexgen.equals("F")){
            
           try {
            
    String host = "jdbc:mysql://localhost:3306/javaprojects?zeroDateTimeBehavior=convertToNull";
    String uName ="admins";
    String uPass ="276438951";
    Connection con = DriverManager.getConnection(host,uName,uPass);
    
    
    Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
    String SQL = "SELECT*FROM block5 where OCCUPANT_1='"+adm_no4+"' or OCCUPANT_2='"+adm_no4+"'";
    
    ResultSet rs = stmt.executeQuery(SQL);
    
    //rs.moveToCurrentRow();
    //rs.updateString("OCCUPANT_1","150232432409");
    //rs.updateRow();
    //stmt.close( );
    //rs.close( );
    if (rs.next()){
        new RoomAllocated ().setVisible(true);
        dispose();
        
    }
    else{
    rs.close( );
    
    
    String SQL1 = "SELECT*FROM block5 ";
    ResultSet rs1 = stmt.executeQuery(SQL1);
    
    
    int roomnum =126;
    rs1.next();
    while (roomnum>=0){
        rs1.moveToCurrentRow();
        String occu1=rs1.getString("OCCUPANT_1");
        String occu2=rs1.getString("OCCUPANT_2");
        String occu3=rs1.getString("ROOM_ID");
        
        if(occu3.length()>2){
        rs1.next();
            
            
        }else if(occu1.equals("1")){
            rs1.updateString("OCCUPANT_2", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu2.equals("1")){
            rs1.updateString("OCCUPANT_3", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else {
            rs1.next();
        }
        roomnum--;
    } }
    
       }
       catch (SQLException err){
        System.out.println(err.getMessage());
    } 
            
        new RoomAllocated ().setVisible(true);
        dispose();}
       
        if (yearcurr11==1&&kozi.equals("BENG")&&sexgen.equals("F")){
            
            
            //JOptionPane.showMessageDialog(Profile.this,"Sorry System is not raedy for Chang'ombe dorms,\n click Report Errors to contact system administrator");
            
          try {
            
    String host = "jdbc:mysql://localhost:3306/javaprojects?zeroDateTimeBehavior=convertToNull";
    String uName ="admins";
    String uPass ="276438951";
    Connection con = DriverManager.getConnection(host,uName,uPass);
    
    
    Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
    String SQL = "SELECT*FROM block6 where OCCUPANT_1='"+adm_no4+"' or OCCUPANT_2='"+adm_no4+"'";
    
    ResultSet rs = stmt.executeQuery(SQL);
    
    //rs.moveToCurrentRow();
    //rs.updateString("OCCUPANT_1","150232432409");
    //rs.updateRow();
    //stmt.close( );
    //rs.close( );
    if (rs.next()){
        new RoomAllocated ().setVisible(true);
        dispose();
        
    }
    else{
    rs.close( );
    
    
    String SQL1 = "SELECT*FROM block6 ";
    ResultSet rs1 = stmt.executeQuery(SQL1);
    
    
    int roomnum =68;
    rs1.next();
    while (roomnum>=0){
        rs1.moveToCurrentRow();
        String occu1=rs1.getString("OCCUPANT_1");
        String occu2=rs1.getString("OCCUPANT_2");
        String occu3=rs1.getString("ROOM_ID");
        int roomnum156= Integer.parseInt(occu3);
        
        if(roomnum156<300){
        rs1.next();
            
            
        }else if(occu1.equals("1")){
            rs1.updateString("OCCUPANT_2", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu2.equals("1")){
            rs1.updateString("OCCUPANT_3", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else {
            rs1.next();
        }
        roomnum--;
    } }
    
       }
       catch (SQLException err){
        System.out.println(err.getMessage());
    } 
            
        new RoomAllocated ().setVisible(true);
        dispose();  
        }
        
        if (yearcurr11==2&&kozi.equals("BENG")&&sexgen.equals("F")||yearcurr11==3&&kozi.equals("BENG")&&sexgen.equals("F")){
            
            try {
            
    String host = "jdbc:mysql://localhost:3306/javaprojects?zeroDateTimeBehavior=convertToNull";
    String uName ="admins";
    String uPass ="276438951";
    Connection con = DriverManager.getConnection(host,uName,uPass);
    
    
    Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
    String SQL = "SELECT*FROM block5 where OCCUPANT_1='"+adm_no4+"' or OCCUPANT_2='"+adm_no4+"'";
    
    ResultSet rs = stmt.executeQuery(SQL);
    
    //rs.moveToCurrentRow();
    //rs.updateString("OCCUPANT_1","150232432409");
    //rs.updateRow();
    //stmt.close( );
    //rs.close( );
    if (rs.next()){
        new RoomAllocated ().setVisible(true);
        dispose();
        
    }
    else{
    rs.close( );
    
    
    String SQL1 = "SELECT*FROM block5 ";
    ResultSet rs1 = stmt.executeQuery(SQL1);
    
    
    int roomnum =126;
    rs1.next();
    while (roomnum>=0){
        rs1.moveToCurrentRow();
        String occu1=rs1.getString("OCCUPANT_1");
        String occu2=rs1.getString("OCCUPANT_2");
        String occu3=rs1.getString("ROOM_ID");
        
        if(occu3.length()<=2){
        rs1.next();
            
            
        }else if(occu1.equals("1")){
            rs1.updateString("OCCUPANT_2", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu2.equals("1")){
            rs1.updateString("OCCUPANT_3", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else {
            rs1.next();
        }
        roomnum--;
    } }
    
       }
       catch (SQLException err){
        System.out.println(err.getMessage());
    } 
            
            
        new RoomAllocated ().setVisible(true);
        dispose();}
      
      //BOYS  
        
        if (yearcurr11==1&&kozi.equals("OD")&&sexgen.equals("M")){
       
            try {
            
    String host = "jdbc:mysql://localhost:3306/javaprojects?zeroDateTimeBehavior=convertToNull";
    String uName ="admins";
    String uPass ="276438951";
    Connection con = DriverManager.getConnection(host,uName,uPass);
    
    
    Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
    String SQL = "SELECT*FROM block1 where OCCUPANT_1='"+adm_no4+"' or OCCUPANT_2='"+adm_no4+"'or OCCUPANT_3='"+adm_no4+"'or OCCUPANT_4='"+adm_no4+"'or OCCUPANT_5='"+adm_no4+"'or OCCUPANT_6='"+adm_no4+"'or OCCUPANT_7='"+adm_no4+"'or OCCUPANT_8='"+adm_no4+"'or OCCUPANT_9='"+adm_no4+"'or OCCUPANT_10='"+adm_no4+"'";
    
    ResultSet rs = stmt.executeQuery(SQL);
    
    //rs.moveToCurrentRow();
    //rs.updateString("OCCUPANT_1","150232432409");
    //rs.updateRow();
    //stmt.close( );
    //rs.close( );
    if (rs.next()){
        new RoomAllocated ().setVisible(true);
        dispose();
        
    }
    else{
    rs.close( );
    
    
    String SQL1 = "SELECT*FROM block1 ";
    ResultSet rs1 = stmt.executeQuery(SQL1);
    
    
    int roomnum =20;
    rs1.next();
    while (roomnum>=0){
        rs1.moveToCurrentRow();
        String occu1=rs1.getString("OCCUPANT_1");
        String occu2=rs1.getString("OCCUPANT_2");
        String occu3=rs1.getString("OCCUPANT_3");
        String occu4=rs1.getString("OCCUPANT_4");
        String occu5=rs1.getString("OCCUPANT_5");
        String occu6=rs1.getString("OCCUPANT_6");
        String occu7=rs1.getString("OCCUPANT_7");
        String occu8=rs1.getString("OCCUPANT_8");
        String occu9=rs1.getString("OCCUPANT_9");
        String occu10=rs1.getString("OCCUPANT_10");
        
        if(occu1.equals("1")){
        
            
            rs1.updateString("OCCUPANT_1", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
            
        }else if(occu2.equals("1")){
            rs1.updateString("OCCUPANT_2", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu3.equals("1")){
            rs1.updateString("OCCUPANT_3", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu4.equals("1")){
            rs1.updateString("OCCUPANT_4", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu5.equals("1")){
            rs1.updateString("OCCUPANT_5", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu6.equals("1")){
            rs1.updateString("OCCUPANT_6", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu7.equals("1")){
            rs1.updateString("OCCUPANT_7", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu8.equals("1")){
            rs1.updateString("OCCUPANT_8", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu9.equals("1")){
            rs1.updateString("OCCUPANT_9", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu10.equals("1")){
            rs1.updateString("OCCUPANT_10", adm_no4);
            break;
            
        }else {
            rs1.next();
        }
        roomnum--;
    } }
    
       }
       catch (SQLException err){
        System.out.println(err.getMessage());
    }
    
            
        new RoomAllocated ().setVisible(true);
        dispose();}
        
        if (yearcurr11==2&&kozi.equals("OD")&&sexgen.equals("M")){
           
            try {
            
    String host = "jdbc:mysql://localhost:3306/javaprojects?zeroDateTimeBehavior=convertToNull";
    String uName ="admins";
    String uPass ="276438951";
    Connection con = DriverManager.getConnection(host,uName,uPass);
    
    
    Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
    String SQL = "SELECT*FROM block3 where OCCUPANT_1='"+adm_no4+"' or OCCUPANT_2='"+adm_no4+"'or OCCUPANT_3='"+adm_no4+"'or OCCUPANT_4='"+adm_no4+"'or OCCUPANT_5='"+adm_no4+"'or OCCUPANT_6='"+adm_no4+"'or OCCUPANT_7='"+adm_no4+"'or OCCUPANT_8='"+adm_no4+"'or OCCUPANT_9='"+adm_no4+"'or OCCUPANT_10='"+adm_no4+"'";
    
    ResultSet rs = stmt.executeQuery(SQL);
    
    //rs.moveToCurrentRow();
    //rs.updateString("OCCUPANT_1","150232432409");
    //rs.updateRow();
    //stmt.close( );
    //rs.close( );
    if (rs.next()){
        new RoomAllocated ().setVisible(true);
        dispose();
        
    }
    else{
    rs.close( );
    
    
    String SQL1 = "SELECT*FROM block3 ";
    ResultSet rs1 = stmt.executeQuery(SQL1);
    
    
    int roomnum =30;
    rs1.next();
    while (roomnum>=0){
        rs1.moveToCurrentRow();
        String occu1=rs1.getString("OCCUPANT_1");
        String occu2=rs1.getString("OCCUPANT_2");
        String occu3=rs1.getString("OCCUPANT_3");
        String occu4=rs1.getString("OCCUPANT_4");
        String occu5=rs1.getString("OCCUPANT_5");
        String occu6=rs1.getString("OCCUPANT_6");
        String occu7=rs1.getString("OCCUPANT_7");
        String occu8=rs1.getString("OCCUPANT_8");
        String occu9=rs1.getString("OCCUPANT_9");
        String occu10=rs1.getString("OCCUPANT_10");
        
        if(occu1.equals("1")){
        
            
            rs1.updateString("OCCUPANT_1", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
            
        }else if(occu2.equals("1")){
            rs1.updateString("OCCUPANT_2", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu3.equals("1")){
            rs1.updateString("OCCUPANT_3", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu4.equals("1")){
            rs1.updateString("OCCUPANT_4", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu5.equals("1")){
            rs1.updateString("OCCUPANT_5", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu6.equals("1")){
            rs1.updateString("OCCUPANT_6", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu7.equals("1")){
            rs1.updateString("OCCUPANT_7", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu8.equals("1")){
            rs1.updateString("OCCUPANT_8", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu9.equals("1")){
            rs1.updateString("OCCUPANT_9", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu10.equals("1")){
            rs1.updateString("OCCUPANT_10", adm_no4);
            break;
            
        }else {
            rs1.next();
        }
        roomnum--;
    } }
    
       }
       catch (SQLException err){
        System.out.println(err.getMessage());
    }
    
            
        new RoomAllocated ().setVisible(true);
        dispose();}
        if (yearcurr11==3&&kozi.equals("OD")&&sexgen.equals("M")){
            
            try {
            
    String host = "jdbc:mysql://localhost:3306/javaprojects?zeroDateTimeBehavior=convertToNull";
    String uName ="admins";
    String uPass ="276438951";
    Connection con = DriverManager.getConnection(host,uName,uPass);
    
    
    Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
    String SQL = "SELECT*FROM block4 where OCCUPANT_1='"+adm_no4+"' or OCCUPANT_2='"+adm_no4+"'";
    
    ResultSet rs = stmt.executeQuery(SQL);
    
    //rs.moveToCurrentRow();
    //rs.updateString("OCCUPANT_1","150232432409");
    //rs.updateRow();
    //stmt.close( );
    //rs.close( );
    if (rs.next()){
        new RoomAllocated ().setVisible(true);
        dispose();
        
    }
    else{
    rs.close( );
    
    
    String SQL1 = "SELECT*FROM block4 ";
    ResultSet rs1 = stmt.executeQuery(SQL1);
    
    
    int roomnum =126;
    rs1.next();
    while (roomnum>=0){
        rs1.moveToCurrentRow();
        String occu1=rs1.getString("OCCUPANT_1");
        String occu2=rs1.getString("OCCUPANT_2");
        
        
        if(occu1.equals("1")){
            rs1.updateString("OCCUPANT_2", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu2.equals("1")){
            rs1.updateString("OCCUPANT_3", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else {
            rs1.next();
        }
        roomnum--;
    } }
    
       }
       catch (SQLException err){
        System.out.println(err.getMessage());
    } 
            
            
            
        new RoomAllocated ().setVisible(true);
        dispose();}
        if (yearcurr11==1&&kozi.equals("BENG")&&sexgen.equals("M")){
            //JOptionPane.showMessageDialog(Profile.this,"Sorry System is not raedy for Chang'ombe dorms,\n click Report Errors to contact system administrator");
            
        try {
            
    String host = "jdbc:mysql://localhost:3306/javaprojects?zeroDateTimeBehavior=convertToNull"+"";
    String uName ="admins";
    String uPass ="276438951";
    Connection con = DriverManager.getConnection(host,uName,uPass);
    
    
    Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
    String SQL = "SELECT*FROM block6 where OCCUPANT_1='"+adm_no4+"' or OCCUPANT_2='"+adm_no4+"'";
    
    ResultSet rs = stmt.executeQuery(SQL);
    
    //rs.moveToCurrentRow();
    //rs.updateString("OCCUPANT_1","150232432409");
    //rs.updateRow();
    //stmt.close( );
    //rs.close( );
    if (rs.next()){
        new RoomAllocated ().setVisible(true);
        dispose();
        
    }
    else{
    rs.close( );
    
    
    String SQL1 = "SELECT*FROM block6 ";
    ResultSet rs1 = stmt.executeQuery(SQL1);
    
    
    int roomnum =68;
    rs1.next();
    while (roomnum>=0){
        rs1.moveToCurrentRow();
        String occu1=rs1.getString("OCCUPANT_1");
        String occu2=rs1.getString("OCCUPANT_2");
        String occu3=rs1.getString("ROOM_ID");
        int roomnum156= Integer.parseInt(occu3);
        
        if(roomnum156>300){
        rs1.next();
            
            
        }else if(occu1.equals("1")){
            rs1.updateString("OCCUPANT_2", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu2.equals("1")){
            rs1.updateString("OCCUPANT_3", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else {
            rs1.next();
        }
        roomnum--;
    } }
    
       }
       catch (SQLException err){
        System.out.println(err.getMessage());
    } 
            
        new RoomAllocated ().setVisible(true);
        dispose();    
            
            
        }
        
        if (yearcurr11==2&&kozi.equals("BENG")&&sexgen.equals("M")||yearcurr11==3&&kozi.equals("BENG")&&sexgen.equals("M")){
            try {
            
    String host = "jdbc:mysql://localhost:3306/javaprojects?zeroDateTimeBehavior=convertToNull";
    String uName ="admins";
    String uPass ="276438951";
    Connection con = DriverManager.getConnection(host,uName,uPass);
    
    
    Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
    String SQL = "SELECT*FROM block5 where OCCUPANT_1='"+adm_no4+"' or OCCUPANT_2='"+adm_no4+"'";
    
    ResultSet rs = stmt.executeQuery(SQL);
    
    //rs.moveToCurrentRow();
    //rs.updateString("OCCUPANT_1","150232432409");
    //rs.updateRow();
    //stmt.close( );
    //rs.close( );
    if (rs.next()){
        new RoomAllocated ().setVisible(true);
        dispose();
        
    }
    else{
    rs.close( );
    
    
    String SQL1 = "SELECT*FROM block5 ";
    ResultSet rs1 = stmt.executeQuery(SQL1);
    
    
    int roomnum =126;
    rs1.next();
    while (roomnum>=0){
        rs1.moveToCurrentRow();
        String occu1=rs1.getString("OCCUPANT_1");
        String occu2=rs1.getString("OCCUPANT_2");
        String occu3=rs1.getString("ROOM_ID");
        
        if(occu3.length()<=2){
        rs1.next();
            
            
        }else if(occu1.equals("1")){
            rs1.updateString("OCCUPANT_2", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else if(occu2.equals("1")){
            rs1.updateString("OCCUPANT_3", adm_no4);
            rs1.updateRow();
            stmt.close( );
            rs1.close( );
            break;
            
        }else {
            rs1.next();
        }
        roomnum--;
    } }
    
       }
       catch (SQLException err){
        JOptionPane.showMessageDialog(this, err.getLocalizedMessage());
    } 
        new RoomAllocated ().setVisible(true);
        dispose();}
      
        
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JOptionPane.showMessageDialog(Profile.this,"SYS ADMIN: Ismaili\n EMAIL: ismizo@live.com\n PHONE: +255714956909");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Profile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField admno;
    private javax.swing.JTextField coursedepartment;
    private javax.swing.JTextField depart;
    private javax.swing.JTextField gender;
    private javax.swing.JTextField homcity;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField yearcurr;
    // End of variables declaration//GEN-END:variables
}
